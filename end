#include "stdio.h"
#include "math.h"
#include "time.h"

float Q_rsqrt( float number ) // number = x*x + y*y + z*z
{
        int i;
        float x2, y;
        const float threehalfs = 1.5F;
 
        x2 = number * 0.5F;
        y  = number;
        i  = * ( int * ) &y;                       // evil floating point bit level hacking
        i  = 0x5f3759df - ( i >> 1 );               // what the ****?
        y  = * ( float * ) &i;
        y  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration
//      y  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed

        return y;
}

void main() {
    clock_t begin, end;
    double time_Q_rsqrt, time_sqrtf;
    
    float arr_x[100], arr_abs_accuracy[100], arr_time_ratio[100];
    
    for(int i = 1; i <= 100; i++)
        arr_x[i-1] = i;
        
    for(int i = 0; i < 100; i++){
        begin = clock();
        Q_rsqrt(arr_x[i]);
        end = clock();
        time_Q_rsqrt = (double)(end - begin) / CLOCKS_PER_SEC;
        
        begin = clock();
        1/sqrtf(arr_x[i]);
        end = clock();
        time_sqrtf = (double)(end - begin) / CLOCKS_PER_SEC;
        
        arr_time_ratio[i] = time_Q_rsqrt/time_sqrtf;
    }
    
    for(int i = 0; i < 100; i++)
        printf("%f ", arr_time_ratio[i]);
        
    for(int i = 0; i < 100; i++)
        arr_abs_accuracy[i] = 1/sqrtf(arr_x[i]) - Q_rsqrt(arr_x[i]);
        
//    for(int i = 0; i < 100; i++)
//        printf("%f ", arr_abs_accuracy[i]);
        
    
}
