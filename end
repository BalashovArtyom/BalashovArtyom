#include "stdio.h"
#include "math.h"
#include "time.h"

#define SIZE 10000

float Q_rsqrt( float number ) // number = x*x + y*y + z*z
{
        int i;
        float x2, y;
        const float threehalfs = 1.5F;
 
        x2 = number * 0.5F;
        y  = number;
        i  = * ( int * ) &y;                       // evil floating point bit level hacking
        i  = 0x5f3759df - ( i >> 1 );               // what the ****?
        y  = * ( float * ) &i;
        y  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration
//      y  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed

        return y;
}

void main() {
    clock_t begin, end;
    double time_Q_rsqrt, time_sqrtf;
    float arr_Q_rsqrt[SIZE], arr_sqrtf[SIZE];
    float arr_x[SIZE], arr_abs_accuracy[SIZE], time_ratio;
    
    for(int i = 1; i <= SIZE; i++)
        arr_x[i-1] = i;
        
    begin = clock();    
    for(int i = 0; i < SIZE; i++)
        arr_Q_rsqrt[i] = Q_rsqrt(arr_x[i]);
    end = clock();
    time_Q_rsqrt = (double)(end - begin) / CLOCKS_PER_SEC;
        
    begin = clock();
    for(int i = 0; i < SIZE; i++)
        arr_sqrtf[i] = 1/sqrtf(arr_x[i]);
    end = clock();
    time_sqrtf = (double)(end - begin) / CLOCKS_PER_SEC;
        
    time_ratio = time_Q_rsqrt/time_sqrtf;

        
    for(int i = 0; i < SIZE; i++)
        arr_abs_accuracy[i] = 1/sqrtf(arr_x[i]) - Q_rsqrt(arr_x[i]);
        
//    for(int i = 0; i < SIZE; i++)
//        printf("%f ", arr_abs_accuracy[i]);
        
    FILE* file;
    char buffer[10000];
    file = fopen("res.csv", "w");
    for(int i=0; i<100; i++)
        fprintf(file,"%f, %f, ",arr_x[i], arr_abs_accuracy[i]);
    fprintf(file,"time_ratio = %d", time_ratio);
	fclose(file);
    file = fopen("res.csv", "r");
    fgets(buffer, 9999, file);
    printf("%s\n", buffer);
    fclose(file);
}
